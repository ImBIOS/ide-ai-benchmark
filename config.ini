[DEFAULT]
# IDE AI Benchmark Configuration
project_name = ide-ai-benchmark
version = 0.1.0
author = ImBIOS
description = Cross-IDE AI model performance benchmarking framework

[general]
# Default IDE to use when none specified
default_ide = cursor
# Default AI model when none specified
default_model = claude-3.5-sonnet
# Test timeout in seconds
test_timeout = 300
# Screenshot quality (1-100)
screenshot_quality = 95
# Enable debug logging
debug = false

[ides]
# Supported IDEs and their configurations
cursor_enabled = true
windsurf_enabled = true
vscode_enabled = true
trae_enabled = false

[cursor]
# Cursor IDE Configuration
app_path = ./cursor.AppImage
launch_args = --no-sandbox,--disable-dev-shm-usage
supported_models = claude-3.5-sonnet,gpt-4,gpt-4-turbo,claude-3-haiku
default_model = claude-3.5-sonnet
ai_chat_shortcut = ctrl+l
command_palette_shortcut = ctrl+shift+p
window_title_pattern = cursor

[windsurf]
# Windsurf IDE Configuration
app_path = ./windsurf.AppImage
launch_args = --no-sandbox
supported_models = claude-3.5-sonnet,gpt-4,gemini-pro
default_model = claude-3.5-sonnet
ai_chat_shortcut = ctrl+i
command_palette_shortcut = ctrl+shift+p
window_title_pattern = windsurf

[vscode]
# VSCode Configuration
app_path = /usr/bin/code
launch_args = --no-sandbox
supported_models = github-copilot
default_model = github-copilot
ai_chat_shortcut = ctrl+shift+i
command_palette_shortcut = ctrl+shift+p
window_title_pattern = Visual Studio Code

[trae]
# Trae IDE Configuration (placeholder)
app_path = ./trae.AppImage
launch_args = --no-sandbox
supported_models = claude-3.5-sonnet,gpt-4
default_model = claude-3.5-sonnet
ai_chat_shortcut = ctrl+j
command_palette_shortcut = ctrl+shift+p
window_title_pattern = trae

[ai_models]
# AI Model Configurations
claude_3_5_sonnet_provider = anthropic
claude_3_5_sonnet_api_key_env = ANTHROPIC_API_KEY
gpt_4_provider = openai
gpt_4_api_key_env = OPENAI_API_KEY
gpt_4_turbo_provider = openai
gpt_4_turbo_api_key_env = OPENAI_API_KEY
gemini_pro_provider = google
gemini_pro_api_key_env = GOOGLE_API_KEY
github_copilot_provider = github
github_copilot_api_key_env = GITHUB_TOKEN

[testing]
# Test Configuration
enable_cross_ide_tests = true
enable_performance_benchmarks = true
enable_ai_quality_tests = true
screenshot_on_failure = true
max_test_duration = 600
retry_failed_tests = 1

[benchmarking]
# Benchmarking Configuration
code_generation_tasks = function_creation,class_creation,algorithm_implementation,test_generation
performance_metrics = response_time,memory_usage,cpu_usage,accuracy_score
quality_metrics = syntax_correctness,best_practices,security_check,maintainability

[reporting]
# Report Generation Configuration
generate_html_reports = true
generate_json_reports = true
generate_csv_data = true
include_screenshots = true
comparison_charts = true

[display]
# Display Configuration (for headless testing)
default_display = :99
screen_resolution = 1920x1080x24
virtual_display_timeout = 30